{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# CPE313 - CPE32S8 - 2/6/2024 Activity\n",
        "\n",
        "Name: Vhan Randolp S. Pe√±a"
      ],
      "metadata": {
        "id": "xOVD-HoTM895"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "G4i6aB4fM1yq"
      },
      "outputs": [],
      "source": [
        "class Neuron:\n",
        "    def __init__(self, input, weight):\n",
        "      self.input = input\n",
        "      self.weight = weight\n",
        "\n",
        "    def adder(self):\n",
        "      sum = 0\n",
        "\n",
        "      for i in range(len(self.input)):\n",
        "        sum += self.input[i] * self.weight[i]\n",
        "\n",
        "      return sum\n",
        "\n",
        "    def relu(self):\n",
        "      output = self.adder()\n",
        "      if output <= 0:\n",
        "        return 0\n",
        "      else:\n",
        "        return output"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_1 = Neuron([1, 0], [2, 3])\n",
        "test_2 = Neuron([1, -1], [2, 3])\n",
        "test_3 = Neuron([-3, 6], [4, 2])\n",
        "\n",
        "print(\"Test 1:\")\n",
        "print('\\tAdder:\\t', test_1.adder())\n",
        "print('\\tReLu Output:\\t', test_1.relu())\n",
        "\n",
        "print(\"\\nTest 2:\")\n",
        "print('\\tAdder:\\t', test_2.adder())\n",
        "print('\\tReLu Output:\\t', test_2.relu())\n",
        "\n",
        "print(\"\\nTest 3:\")\n",
        "print('\\tAdder:\\t', test_3.adder())\n",
        "print('\\tReLu Output:\\t', test_3.relu())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DgpG_OaANMZF",
        "outputId": "61db325c-d317-43a5-e300-0f71bd7fcd9a"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test 1:\n",
            "\tAdder:\t 2\n",
            "\tReLu Output:\t 2\n",
            "\n",
            "Test 2:\n",
            "\tAdder:\t -1\n",
            "\tReLu Output:\t 0\n",
            "\n",
            "Test 3:\n",
            "\tAdder:\t 0\n",
            "\tReLu Output:\t 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QbXdNyyNNapc"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
